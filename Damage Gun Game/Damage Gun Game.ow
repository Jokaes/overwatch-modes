settings
{
	main
	{
		Description: "Damage Gun Game. v9.0.0     Deal damage to swap to the next hero, complete the list to win. Totally customizable in workshop settings!!     No turrets.     Join my discord.gg/ZdukXgB Created by Jokaes#2263 -Original FFA by DarwinStreams Updated code & more: jokaes.github.io"
		Mode Name: "Damage Gun Game"
	}

	lobby
	{
		Allow Players Who Are In Queue: Yes
		Map Rotation: After A Game
		Max Spectators: 12
		Return To Lobby: Never
	}

	modes
	{
		Deathmatch
		{
			enabled maps
			{
				Black Forest 0
				Castillo 0
				Château Guillard 0
				Ecopoint: Antarctica 0
				Necropolis 0
				Petra 0
			}
		}

		General
		{
			Game Mode Start: Immediately
			Kill Feed: Disabled
			Respawn As Random Hero: Enabled
		}
	}

	heroes
	{
		General
		{
			Ashe
			{
				Ultimate Ability B.O.B.: Disabled
			}

			Symmetra
			{
				Sentry Turret: Disabled
			}

			Torbjörn
			{
				Deploy Turret: Disabled
			}
		}
	}
}

variables
{
	global:
		0: heroList
		1: timeCounter
		2: gameIsAlmostDone
		4: randomSectionOfMap
		5: arenaMap1
		6: arenaMap2
		7: arenaMap3
		8: arenaMap4
		9: damageNecessaryForNextHero
		10: numberOfDpsHeroes
		11: numberOfTankHeroes
		12: numberOfSupportHeroes
		13: tankHeroesInTheMiddleOfTheList
		14: supportHeroesAtTheEndOfTheList
		15: heroListIt
		16: tempHeroList
		17: tempHeroListSupport
		18: tempHeroListTanks
		19: heroListIt2

	player:
		0: damageDone
		1: damageDisplayPos
		2: damageDisplayScale
		3: damageDisplayText
		4: nextObjective
		5: killYourselfPunishment
		6: heroIcon
		7: heroSwapEffect
}

disabled rule("Damage Gun Game v9.0.0")
{
	event
	{
		Ongoing - Global;
	}
}

rule("Disable bulit-in game mode & start timer variables {Game in progress GLOBAL}")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Disable Built-In Game Mode Scoring;
		Disable Built-In Game Mode Completion;
		Disable Built-In Game Mode Announcer;
		Disable Built-In Game Mode Music;
		Pause Match Time;
		Global.timeCounter = 0.001;
		Global.gameIsAlmostDone = False;
		disabled Create HUD Text(Filtered Array(Host Player, Custom String("#Jokaes") == String("#{0}", Host Player)), Null, Custom String(
			"svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average, Server Load Peak), Null, Top, -100, Color(
			White), Color(Lime Green), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Server Load Peak < 85), Null, Custom String(
			"svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average, Server Load Peak), Null, Top, -100, Color(
			White), Color(Lime Green), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Server Load Peak >= 85 && Server Load Peak <= 170), Null, Custom String(
			"svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average, Server Load Peak), Null, Top, -100, Color(
			White), Color(Orange), Color(White), Visible To and String, Default Visibility);
		Create HUD Text(Filtered Array(All Players(All Teams), Server Load Peak > 170), Null, Custom String(
			"svr load: {0} | svr avg: {1} | svr peak: {2}", Server Load, Server Load Average, Server Load Peak), Null, Top, -100, Color(
			White), Color(Red), Color(White), Visible To and String, Default Visibility);
	}
}

rule("Damage track & display")
{
	event
	{
		Player Dealt Damage;
		All;
		All;
	}

	conditions
	{
		Victim != Attacker;
		(Round To Integer(Event Damage, To Nearest) >= 1) == True;
	}

	actions
	{
		Event Player.damageDone += Event Damage;
		Set Player Score(Event Player, Event Player.damageDone);
		Event Player.nextObjective = (Round To Integer(Event Player.damageDone / Global.damageNecessaryForNextHero, Down) + 1)
			* Global.damageNecessaryForNextHero;
		Destroy In-World Text(Event Player.damageDisplayText);
		Wait(0.016, Ignore Condition);
		Event Player.damageDisplayPos = Eye Position(Victim);
		Event Player.damageDisplayScale = Event Damage / 50;
		Skip If(Event Player.damageDisplayScale >= 1, 1);
		Event Player.damageDisplayScale = 1;
		Skip If(Event Was Critical Hit, 1);
		Create In-World Text(Event Player, Round To Integer(Event Damage, To Nearest), Event Player.damageDisplayPos,
			Event Player.damageDisplayScale, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
		Skip If(!Event Was Critical Hit, 1);
		Create In-World Text(Event Player, Round To Integer(Event Damage, To Nearest), Event Player.damageDisplayPos,
			Event Player.damageDisplayScale, Clip Against Surfaces, Visible To Position and String, Color(Red), Default Visibility);
		Event Player.damageDisplayText = Last Text ID;
	}
}

rule("Take away score if kill yourself {Punishment}")
{
	event
	{
		Player Died;
		All;
		All;
	}

	conditions
	{
		Attacker == Event Player;
	}

	actions
	{
		Event Player.killYourselfPunishment = True;
		Small Message(Event Player, String("{0} {1} {2}", String("You Lose"), Round To Integer(Event Damage, To Nearest), Custom String(
			"{0} (SUICIDE)", String("Points"))));
		Event Player.damageDone -= Event Damage;
		Set Player Score(Event Player, Event Player.damageDone);
		Event Player.nextObjective = (Round To Integer(Event Player.damageDone / Global.damageNecessaryForNextHero, Down) + 1)
			* Global.damageNecessaryForNextHero;
		Wait(0.032, Ignore Condition);
		Event Player.killYourselfPunishment = False;
	}
}

rule("Take away score if damage yourself {Punishment}")
{
	event
	{
		Player Dealt Damage;
		All;
		All;
	}

	conditions
	{
		Attacker == Victim;
	}

	actions
	{
		Wait(0.016, Ignore Condition);
		Abort If(Event Player.killYourselfPunishment == True);
		Skip If(Event Damage <= 0.500, 1);
		Small Message(Event Player, String("{0} {1} {2}", String("You Lose"), Round To Integer(Event Damage, To Nearest), Custom String(
			"{0} (SELF-DAMAGE)", String("Points"))));
		Event Player.damageDone -= Event Damage;
		Set Player Score(Event Player, Event Player.damageDone);
		Event Player.nextObjective = (Round To Integer(Event Player.damageDone / Global.damageNecessaryForNextHero, Down) + 1)
			* Global.damageNecessaryForNextHero;
	}
}

rule("Victory")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Event Player.damageDone >= Global.damageNecessaryForNextHero * Count Of(Global.heroList);
	}

	actions
	{
		Big Message(All Players(All Teams), Custom String("GG. Thanks for playing {0}", Icon String(Happy)));
		Create Effect(All Players(All Teams), Sparkles, Color(White), Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Green), Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Red), Event Player, 1.500, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Sparkles, Color(Blue), Event Player, 1.500, Visible To Position and Radius);
		Create In-World Text(All Players(All Teams), Custom String("{0} {0}!", String("Winner")), Event Player, 2, Clip Against Surfaces,
			Visible To Position and String, Color(White), Default Visibility);
		Set Gravity(All Players(All Teams), 0.100);
		Declare Player Victory(Event Player);
	}
}

rule("In assembling {Skip}")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Assembling Heroes == True;
	}

	actions
	{
		Set Match Time(0);
	}
}

rule("In setup {Reset damageDone}")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is In Setup == True;
	}

	actions
	{
		Event Player.damageDone = 0;
	}
}

rule("Workshop Settings")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.damageNecessaryForNextHero = Workshop Setting Integer(Custom String("Heroes Settings"), Custom String(
			"​Damage necessary for next hero [1000]"), 1000, 250, 1000, 0);
		Global.numberOfDpsHeroes = Workshop Setting Integer(Custom String("Heroes Settings"), Custom String(
			"​******* of Damage heroes [4]"), 4, 0, 10, 0);
		Global.numberOfTankHeroes = Workshop Setting Integer(Custom String("Heroes Settings"), Custom String(
			"​******** of Tank heroes [1]"), 1, 0, 8, 0);
		Global.numberOfSupportHeroes = Workshop Setting Integer(Custom String("Heroes Settings"), Custom String(
			"​********* of Support heroes [1]"), 1, 0, 7, 0);
		Global.tankHeroesInTheMiddleOfTheList = Workshop Setting Toggle(Custom String("Heroes Settings"), Custom String(
			"​​​​​********** in the middle of the list [ON]"), True, 0);
		Global.supportHeroesAtTheEndOfTheList = Workshop Setting Toggle(Custom String("Heroes Settings"), Custom String(
			"​​************* at the end of the list [ON]"), True, 0);
	}
}

rule("Hero List Generation")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.heroList = Empty Array;
		Global.tempHeroList = All Damage Heroes;
		Global.tempHeroList = Randomized Array(Global.tempHeroList);
		For Global Variable(heroListIt, 0, Global.numberOfDpsHeroes, 1);
			Modify Global Variable(heroList, Append To Array, Global.tempHeroList[Global.heroListIt]);
		End;
		Global.tempHeroListSupport = All Support Heroes;
		Global.tempHeroListSupport = Randomized Array(Global.tempHeroListSupport);
		Global.tempHeroListSupport = Array Slice(Global.tempHeroListSupport, 0, Global.numberOfSupportHeroes);
		Global.tempHeroListTanks = All Tank Heroes;
		Global.tempHeroListTanks = Randomized Array(Global.tempHeroListTanks);
		Global.tempHeroListTanks = Array Slice(Global.tempHeroListTanks, 0, Global.numberOfTankHeroes);
		Modify Global Variable(heroList, Append To Array, Global.tempHeroListSupport);
		If(!Global.supportHeroesAtTheEndOfTheList);
			Global.heroList = Randomized Array(Global.heroList);
		End;
		If(!Global.tankHeroesInTheMiddleOfTheList);
			If(!Global.supportHeroesAtTheEndOfTheList);
				Modify Global Variable(heroList, Append To Array, Global.tempHeroListTanks);
				Global.heroList = Randomized Array(Global.heroList);
			Else;
				Global.tempHeroList = Global.heroList;
				Global.heroList = Empty Array;
				Global.heroList = Array Slice(Global.tempHeroList, 0, Global.numberOfDpsHeroes);
				Modify Global Variable(heroList, Append To Array, Global.tempHeroListTanks);
				Global.heroList = Randomized Array(Global.heroList);
				Modify Global Variable(heroList, Append To Array, Global.tempHeroListSupport);
			End;
		Else;
			Global.tempHeroList = Global.heroList;
			Global.heroList = Empty Array;
			For Global Variable(heroListIt, 0, Count Of(All Tank Heroes) + Count Of(All Damage Heroes) + Count Of(All Support Heroes), 1);
				If(Global.heroListIt == Round To Integer((Count Of(Global.tempHeroList) - 1) / 2, Up));
					For Global Variable(heroListIt2, 0, Global.numberOfTankHeroes, 1);
						Modify Global Variable(heroList, Append To Array, Global.tempHeroListTanks[Global.heroListIt2]);
					End;
				End;
				Modify Global Variable(heroList, Append To Array, Global.tempHeroList[Global.heroListIt]);
			End;
		End;
		Global.tempHeroList = Global.heroList;
		Global.heroList = Empty Array;
		For Global Variable(heroListIt, 0, Count Of(All Tank Heroes) + Count Of(All Damage Heroes) + Count Of(All Support Heroes), 1);
			If(Global.tempHeroList[Global.heroListIt] == Null);
				Break;
			End;
			Modify Global Variable(heroList, Append To Array, Global.tempHeroList[Global.heroListIt]);
		End;
	}
}

rule("Preload Heroes")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Preload Hero(Event Player, Global.heroList);
	}
}

rule("In Setup -> Starting Hero -> HeroList[0]")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is In Setup == True;
	}

	actions
	{
		Start Forcing Player To Be Hero(Event Player, First Of(Global.heroList));
		Event Player.nextObjective = Global.damageNecessaryForNextHero;
	}
}

rule("In Game in progress -> Starting Hero -> HeroList[0]")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Start Forcing Player To Be Hero(Event Player, First Of(Global.heroList));
		Event Player.nextObjective = Global.damageNecessaryForNextHero;
	}
}

rule("Start forcing next hero")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Alive(Event Player) == True;
		Hero Of(Event Player) != Global.heroList[Event Player.nextObjective / Global.damageNecessaryForNextHero - 1];
		Event Player.damageDone > 0;
	}

	actions
	{
		Event Player.nextObjective = (Round To Integer(Event Player.damageDone / Global.damageNecessaryForNextHero, Down) + 1)
			* Global.damageNecessaryForNextHero;
		Start Forcing Player To Be Hero(Event Player, Global.heroList[Event Player.nextObjective / Global.damageNecessaryForNextHero - 1]);
		Small Message(Event Player, String("{0}: {1}", String("{0} {1}", String("You"), String("Hero")), Hero Icon String(
			Global.heroList[Event Player.nextObjective / Global.damageNecessaryForNextHero - 1])));
		Create In-World Text(All Players(All Teams), Hero Icon String(
			Global.heroList[Event Player.nextObjective / Global.damageNecessaryForNextHero - 1]), Event Player, 1, Clip Against Surfaces,
			Visible To Position and String, Color(White), Default Visibility);
		Event Player.heroIcon = Last Text ID;
		Wait(0.125, Ignore Condition);
		Play Effect(All Players(All Teams), Good Pickup Effect, Color(Purple), Event Player, 1);
		Create Effect(All Players(All Teams), Sparkles, Color(Purple), Event Player, 1, Visible To Position and Radius);
		Event Player.heroSwapEffect = Last Created Entity;
		Wait(1.250, Ignore Condition);
		Destroy In-World Text(Event Player.heroIcon);
		Destroy Effect(Event Player.heroSwapEffect);
	}
}

rule("in da hood TEXT")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		If(Global.heroList[0] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[0]), Null, Null, String(
				"{0} -> {1}", 1, String("{0} {1}", Hero Icon String(Global.heroList[0]), Count Of(Players On Hero(Global.heroList[0],
				All Teams)))), Right, 1, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[0]), Null, Null, String(
				"{0} -> {1}", 1, String("{0} {1}", Hero Icon String(Global.heroList[0]), Count Of(Players On Hero(Global.heroList[0],
				All Teams)))), Right, 1, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[1] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[1]), Null, Null, String(
				"{0} -> {1}", 2, String("{0} {1}", Hero Icon String(Global.heroList[1]), Count Of(Players On Hero(Global.heroList[1],
				All Teams)))), Right, 2, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[1]), Null, Null, String(
				"{0} -> {1}", 2, String("{0} {1}", Hero Icon String(Global.heroList[1]), Count Of(Players On Hero(Global.heroList[1],
				All Teams)))), Right, 2, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[2] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[2]), Null, Null, String(
				"{0} -> {1}", 3, String("{0} {1}", Hero Icon String(Global.heroList[2]), Count Of(Players On Hero(Global.heroList[2],
				All Teams)))), Right, 3, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[2]), Null, Null, String(
				"{0} -> {1}", 3, String("{0} {1}", Hero Icon String(Global.heroList[2]), Count Of(Players On Hero(Global.heroList[2],
				All Teams)))), Right, 3, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[3] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[3]), Null, Null, String(
				"{0} -> {1}", 4, String("{0} {1}", Hero Icon String(Global.heroList[3]), Count Of(Players On Hero(Global.heroList[3],
				All Teams)))), Right, 4, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[3]), Null, Null, String(
				"{0} -> {1}", 4, String("{0} {1}", Hero Icon String(Global.heroList[3]), Count Of(Players On Hero(Global.heroList[3],
				All Teams)))), Right, 4, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[4] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[4]), Null, Null, String(
				"{0} -> {1}", 5, String("{0} {1}", Hero Icon String(Global.heroList[4]), Count Of(Players On Hero(Global.heroList[4],
				All Teams)))), Right, 5, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[4]), Null, Null, String(
				"{0} -> {1}", 5, String("{0} {1}", Hero Icon String(Global.heroList[4]), Count Of(Players On Hero(Global.heroList[4],
				All Teams)))), Right, 5, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[5] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[5]), Null, Null, String(
				"{0} -> {1}", 6, String("{0} {1}", Hero Icon String(Global.heroList[5]), Count Of(Players On Hero(Global.heroList[5],
				All Teams)))), Right, 6, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[5]), Null, Null, String(
				"{0} -> {1}", 6, String("{0} {1}", Hero Icon String(Global.heroList[5]), Count Of(Players On Hero(Global.heroList[5],
				All Teams)))), Right, 6, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[6] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[6]), Null, Null, String(
				"{0} -> {1}", 7, String("{0} {1}", Hero Icon String(Global.heroList[6]), Count Of(Players On Hero(Global.heroList[6],
				All Teams)))), Right, 7, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[6]), Null, Null, String(
				"{0} -> {1}", 7, String("{0} {1}", Hero Icon String(Global.heroList[6]), Count Of(Players On Hero(Global.heroList[6],
				All Teams)))), Right, 7, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[7] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[7]), Null, Null, String(
				"{0} -> {1}", 8, String("{0} {1}", Hero Icon String(Global.heroList[7]), Count Of(Players On Hero(Global.heroList[7],
				All Teams)))), Right, 8, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[7]), Null, Null, String(
				"{0} -> {1}", 8, String("{0} {1}", Hero Icon String(Global.heroList[7]), Count Of(Players On Hero(Global.heroList[7],
				All Teams)))), Right, 8, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[8] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[8]), Null, Null, String(
				"{0} -> {1}", 9, String("{0} {1}", Hero Icon String(Global.heroList[8]), Count Of(Players On Hero(Global.heroList[8],
				All Teams)))), Right, 9, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[8]), Null, Null, String(
				"{0} -> {1}", 9, String("{0} {1}", Hero Icon String(Global.heroList[8]), Count Of(Players On Hero(Global.heroList[8],
				All Teams)))), Right, 9, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[9] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[9]), Null, Null, String(
				"{0} -> {1}", 10, String("{0} {1}", Hero Icon String(Global.heroList[9]), Count Of(Players On Hero(Global.heroList[9],
				All Teams)))), Right, 10, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[9]), Null, Null, String(
				"{0} -> {1}", 10, String("{0} {1}", Hero Icon String(Global.heroList[9]), Count Of(Players On Hero(Global.heroList[9],
				All Teams)))), Right, 10, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[10] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[10]), Null, Null, String(
				"{0} -> {1}", 11, String("{0} {1}", Hero Icon String(Global.heroList[10]), Count Of(Players On Hero(Global.heroList[10],
				All Teams)))), Right, 11, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[10]), Null, Null, String(
				"{0} -> {1}", 11, String("{0} {1}", Hero Icon String(Global.heroList[10]), Count Of(Players On Hero(Global.heroList[10],
				All Teams)))), Right, 11, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[11] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[11]), Null, Null, String(
				"{0} -> {1}", 12, String("{0} {1}", Hero Icon String(Global.heroList[11]), Count Of(Players On Hero(Global.heroList[11],
				All Teams)))), Right, 12, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[11]), Null, Null, String(
				"{0} -> {1}", 12, String("{0} {1}", Hero Icon String(Global.heroList[11]), Count Of(Players On Hero(Global.heroList[11],
				All Teams)))), Right, 12, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[12] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[12]), Null, Null, String(
				"{0} -> {1}", 13, String("{0} {1}", Hero Icon String(Global.heroList[12]), Count Of(Players On Hero(Global.heroList[12],
				All Teams)))), Right, 13, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[12]), Null, Null, String(
				"{0} -> {1}", 13, String("{0} {1}", Hero Icon String(Global.heroList[12]), Count Of(Players On Hero(Global.heroList[12],
				All Teams)))), Right, 13, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[13] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[13]), Null, Null, String(
				"{0} -> {1}", 14, String("{0} {1}", Hero Icon String(Global.heroList[13]), Count Of(Players On Hero(Global.heroList[13],
				All Teams)))), Right, 14, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[13]), Null, Null, String(
				"{0} -> {1}", 14, String("{0} {1}", Hero Icon String(Global.heroList[13]), Count Of(Players On Hero(Global.heroList[13],
				All Teams)))), Right, 14, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[14] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[14]), Null, Null, String(
				"{0} -> {1}", 15, String("{0} {1}", Hero Icon String(Global.heroList[14]), Count Of(Players On Hero(Global.heroList[14],
				All Teams)))), Right, 15, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[14]), Null, Null, String(
				"{0} -> {1}", 15, String("{0} {1}", Hero Icon String(Global.heroList[14]), Count Of(Players On Hero(Global.heroList[14],
				All Teams)))), Right, 15, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[15] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[15]), Null, Null, String(
				"{0} -> {1}", 16, String("{0} {1}", Hero Icon String(Global.heroList[15]), Count Of(Players On Hero(Global.heroList[15],
				All Teams)))), Right, 16, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[15]), Null, Null, String(
				"{0} -> {1}", 16, String("{0} {1}", Hero Icon String(Global.heroList[15]), Count Of(Players On Hero(Global.heroList[15],
				All Teams)))), Right, 16, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[16] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[16]), Null, Null, String(
				"{0} -> {1}", 17, String("{0} {1}", Hero Icon String(Global.heroList[16]), Count Of(Players On Hero(Global.heroList[16],
				All Teams)))), Right, 17, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[16]), Null, Null, String(
				"{0} -> {1}", 17, String("{0} {1}", Hero Icon String(Global.heroList[16]), Count Of(Players On Hero(Global.heroList[16],
				All Teams)))), Right, 17, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[17] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[17]), Null, Null, String(
				"{0} -> {1}", 18, String("{0} {1}", Hero Icon String(Global.heroList[17]), Count Of(Players On Hero(Global.heroList[17],
				All Teams)))), Right, 18, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[17]), Null, Null, String(
				"{0} -> {1}", 18, String("{0} {1}", Hero Icon String(Global.heroList[17]), Count Of(Players On Hero(Global.heroList[17],
				All Teams)))), Right, 18, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[18] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[18]), Null, Null, String(
				"{0} -> {1}", 19, String("{0} {1}", Hero Icon String(Global.heroList[18]), Count Of(Players On Hero(Global.heroList[18],
				All Teams)))), Right, 19, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[18]), Null, Null, String(
				"{0} -> {1}", 19, String("{0} {1}", Hero Icon String(Global.heroList[18]), Count Of(Players On Hero(Global.heroList[18],
				All Teams)))), Right, 19, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[19] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[19]), Null, Null, String(
				"{0} -> {1}", 20, String("{0} {1}", Hero Icon String(Global.heroList[19]), Count Of(Players On Hero(Global.heroList[19],
				All Teams)))), Right, 20, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[19]), Null, Null, String(
				"{0} -> {1}", 20, String("{0} {1}", Hero Icon String(Global.heroList[19]), Count Of(Players On Hero(Global.heroList[19],
				All Teams)))), Right, 20, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[20] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[20]), Null, Null, String(
				"{0} -> {1}", 21, String("{0} {1}", Hero Icon String(Global.heroList[20]), Count Of(Players On Hero(Global.heroList[20],
				All Teams)))), Right, 21, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[20]), Null, Null, String(
				"{0} -> {1}", 21, String("{0} {1}", Hero Icon String(Global.heroList[20]), Count Of(Players On Hero(Global.heroList[20],
				All Teams)))), Right, 21, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[21] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[21]), Null, Null, String(
				"{0} -> {1}", 22, String("{0} {1}", Hero Icon String(Global.heroList[21]), Count Of(Players On Hero(Global.heroList[21],
				All Teams)))), Right, 22, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[21]), Null, Null, String(
				"{0} -> {1}", 22, String("{0} {1}", Hero Icon String(Global.heroList[21]), Count Of(Players On Hero(Global.heroList[21],
				All Teams)))), Right, 22, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[22] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[22]), Null, Null, String(
				"{0} -> {1}", 23, String("{0} {1}", Hero Icon String(Global.heroList[22]), Count Of(Players On Hero(Global.heroList[22],
				All Teams)))), Right, 23, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[22]), Null, Null, String(
				"{0} -> {1}", 23, String("{0} {1}", Hero Icon String(Global.heroList[22]), Count Of(Players On Hero(Global.heroList[22],
				All Teams)))), Right, 23, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[23] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[23]), Null, Null, String(
				"{0} -> {1}", 24, String("{0} {1}", Hero Icon String(Global.heroList[23]), Count Of(Players On Hero(Global.heroList[23],
				All Teams)))), Right, 24, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[23]), Null, Null, String(
				"{0} -> {1}", 24, String("{0} {1}", Hero Icon String(Global.heroList[23]), Count Of(Players On Hero(Global.heroList[23],
				All Teams)))), Right, 24, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[24] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[24]), Null, Null, String(
				"{0} -> {1}", 25, String("{0} {1}", Hero Icon String(Global.heroList[24]), Count Of(Players On Hero(Global.heroList[24],
				All Teams)))), Right, 25, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[24]), Null, Null, String(
				"{0} -> {1}", 25, String("{0} {1}", Hero Icon String(Global.heroList[24]), Count Of(Players On Hero(Global.heroList[24],
				All Teams)))), Right, 25, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[25] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[25]), Null, Null, String(
				"{0} -> {1}", 26, String("{0} {1}", Hero Icon String(Global.heroList[25]), Count Of(Players On Hero(Global.heroList[25],
				All Teams)))), Right, 26, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[25]), Null, Null, String(
				"{0} -> {1}", 26, String("{0} {1}", Hero Icon String(Global.heroList[25]), Count Of(Players On Hero(Global.heroList[25],
				All Teams)))), Right, 26, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[26] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[26]), Null, Null, String(
				"{0} -> {1}", 27, String("{0} {1}", Hero Icon String(Global.heroList[26]), Count Of(Players On Hero(Global.heroList[26],
				All Teams)))), Right, 27, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[26]), Null, Null, String(
				"{0} -> {1}", 27, String("{0} {1}", Hero Icon String(Global.heroList[26]), Count Of(Players On Hero(Global.heroList[26],
				All Teams)))), Right, 27, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[27] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[27]), Null, Null, String(
				"{0} -> {1}", 28, String("{0} {1}", Hero Icon String(Global.heroList[27]), Count Of(Players On Hero(Global.heroList[27],
				All Teams)))), Right, 28, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[27]), Null, Null, String(
				"{0} -> {1}", 28, String("{0} {1}", Hero Icon String(Global.heroList[27]), Count Of(Players On Hero(Global.heroList[27],
				All Teams)))), Right, 28, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[28] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[28]), Null, Null, String(
				"{0} -> {1}", 29, String("{0} {1}", Hero Icon String(Global.heroList[28]), Count Of(Players On Hero(Global.heroList[28],
				All Teams)))), Right, 29, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[28]), Null, Null, String(
				"{0} -> {1}", 29, String("{0} {1}", Hero Icon String(Global.heroList[28]), Count Of(Players On Hero(Global.heroList[28],
				All Teams)))), Right, 29, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
		If(Global.heroList[29] != Null);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) == Global.heroList[29]), Null, Null, String(
				"{0} -> {1}", 30, String("{0} {1}", Hero Icon String(Global.heroList[29]), Count Of(Players On Hero(Global.heroList[29],
				All Teams)))), Right, 30, Color(White), Color(White), Color(Blue), Visible To and String, Visible Never);
			Create HUD Text(Filtered Array(All Players(All Teams), Hero Of(Current Array Element) != Global.heroList[29]), Null, Null, String(
				"{0} -> {1}", 30, String("{0} {1}", Hero Icon String(Global.heroList[29]), Count Of(Players On Hero(Global.heroList[29],
				All Teams)))), Right, 30, Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		End;
	}
}

rule("Time Counter - Add second")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Set Match Time(Global.timeCounter);
		Wait(1, Ignore Condition);
		Global.timeCounter += 1;
		Loop;
	}
}

rule("Game is almost done")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Event Player.damageDone >= Global.damageNecessaryForNextHero * Count Of(Global.heroList) - Global.damageNecessaryForNextHero;
		Global.gameIsAlmostDone == False;
	}

	actions
	{
		Global.gameIsAlmostDone = True;
		Enable Built-In Game Mode Announcer;
		Enable Built-In Game Mode Music;
		Small Message(All Players(All Teams), Custom String("Damage Gun Game v9.0.0"));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("Created by Jokaes#2263"));
	}
}

rule("Next Objective {Next hero}")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Event Player.nextObjective <= Global.damageNecessaryForNextHero * Count Of(Global.heroList) - Global.damageNecessaryForNextHero;
		Event Player.nextObjective >= 0;
	}

	actions
	{
		Set Objective Description(Event Player, String("{0} {1} {2}", String("Deal"), Round To Integer(
			Event Player.nextObjective - Event Player.damageDone, Down), String("{0} -> {1}", String("Damage"), Hero Icon String(
			Global.heroList[Event Player.nextObjective / Global.damageNecessaryForNextHero]))), Visible To and String);
	}
}

rule("Next Objective {Win}")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Event Player.nextObjective == Global.damageNecessaryForNextHero * Count Of(Global.heroList);
	}

	actions
	{
		Set Objective Description(Event Player, String("{0} {1} {2}", String("Deal"), Round To Integer(
			Event Player.nextObjective - Event Player.damageDone, Down), String("{0} -> {1}", String("Damage"), String("{0} {1}", String(
			"You Win"), Icon String(Happy)))), Visible To and String);
	}
}

rule("Next Hero HUD")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	actions
	{
		Create HUD Text(Event Player, Null, String("{0}: {1}", String("Next Hero"), Event Player.nextObjective), Null, Top, 1, Color(
			White), Color(White), Color(White), Visible To and String, Default Visibility);
	}
}

rule("Random section of the map")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.randomSectionOfMap = Random Integer(1, 2);
	}
}

disabled rule("Always secundary map if exists")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Global.randomSectionOfMap = 2;
	}
}

rule("Global init -Created by Beemoo")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Current Map == Map(Havana);
		Global.randomSectionOfMap == 2;
	}

	actions
	{
		Global.arenaMap1 = False;
		Global.arenaMap2 = Vector(215, 35, -40);
		Global.arenaMap3 = Empty Array;
		Modify Global Variable(arenaMap3, Append To Array, Vector(227.500, 27.500, -57));
		Modify Global Variable(arenaMap3, Append To Array, Vector(227.500, 27.500, -40.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(227.500, 27.500, -25.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(218, 27.500, -16.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(204.830, 27.500, -16.500));
		Modify Global Variable(arenaMap3, Append To Array, Vector(191.170, 27.500, -20.780));
		Modify Global Variable(arenaMap3, Append To Array, Vector(181.600, 27.500, -30.100));
		Modify Global Variable(arenaMap3, Append To Array, Vector(171.190, 28.210, -42));
		Modify Global Variable(arenaMap3, Append To Array, Vector(171.190, 28.210, -55));
		Modify Global Variable(arenaMap3, Append To Array, Vector(185, 27.500, -64.600));
		Modify Global Variable(arenaMap3, Append To Array, Vector(197.600, 27.500, -64.590));
		Modify Global Variable(arenaMap3, Append To Array, Vector(210.200, 27.500, -64.590));
		Modify Global Variable(arenaMap3, Append To Array, Vector(222.600, 27.500, -64.590));
		Global.arenaMap4 = Count Of(Global.arenaMap3) - 1;
		Create Effect(All Players(All Teams), Sphere, Color(Red), Vector(184, -71.800, -46), 100, Visible To Position and Radius);
		Skip If(!Global.arenaMap1, 1);
		Create Effect(All Players(All Teams), Orb, Color(Purple), Global.arenaMap2, 1, Visible To Position and Radius);
	}
}

rule("Effect create loop -Created by Beemoo")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Current Map == Map(Havana);
		Global.arenaMap1 == True;
		Global.arenaMap4 > 0;
		Global.randomSectionOfMap == 2;
	}

	actions
	{
		Wait(0.250, Ignore Condition);
		Create Effect(All Players(All Teams), Ring, Color(Yellow), Global.arenaMap3[Global.arenaMap4], 1.200, Visible To);
		Global.arenaMap4 -= 1;
		Loop If Condition Is True;
	}
}

rule("No entry pillars (knock, tele) -Created by Beemoo")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Current Map == Map(Havana);
		Is True For Any(Global.arenaMap3, Distance Between(Current Array Element, Event Player) < 1.250) == True;
		Global.randomSectionOfMap == 2;
	}

	actions
	{
		Wait(0.500, Ignore Condition);
		Abort If Condition Is False;
		Apply Impulse(Event Player, Direction Towards(Position Of(Event Player), First Of(Global.arenaMap2) + Vector(0, 10, 0)), 12,
			To World, Cancel Contrary Motion);
		Set Status(Event Player, Null, Stunned, 1);
		Play Effect(All Players(All Teams), Debuff Impact Sound, Color(White), Event Player, 100);
		Small Message(Event Player, String("{0} {1}", String("No"), String("{0}!", String("Hiding"))));
		Wait(0.750, Ignore Condition);
		Abort If Condition Is False;
		Teleport(Event Player, First Of(Global.arenaMap2) + Vector(Random Integer(-8, 8), 0, Random Integer(-19, 19)));
	}
}

rule("No entry floor (OOB) -Created by Beemoo")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Current Map == Map(Havana);
		Y Component Of(Position Of(Event Player)) < 26.500;
		Y Component Of(Position Of(Event Player)) > 25;
		Global.randomSectionOfMap == 2;
	}

	actions
	{
		Set Status(Event Player, Null, Burning, 0.500);
		Damage(Event Player, Event Player, 25);
		Apply Impulse(Event Player, Direction Towards(Position Of(Event Player), First Of(Global.arenaMap2) + Vector(0, 10, 0)), 12,
			To World, Cancel Contrary Motion);
		Wait(0.500, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("No entry OOB (spawn tele) -Created by Beemoo")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Current Map == Map(Havana);
		Has Spawned(Event Player) == True;
		(X Component Of(Position Of(Event Player)) < 171 || X Component Of(Position Of(Event Player)) > 229 || Z Component Of(Position Of(
			Event Player)) < -66 || Z Component Of(Position Of(Event Player)) > -15) == True;
		Global.randomSectionOfMap == 2;
	}

	actions
	{
		Teleport(Event Player, Global.arenaMap2 + Vector(Random Integer(-8, 8), 0, Random Integer(-19, 19)));
	}
}

disabled rule("Score Debug (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Button Held(Event Player, Button(Interact)) == True;
	}

	actions
	{
		Event Player.damageDone += 100;
		Set Player Score(Event Player, Event Player.damageDone);
		Event Player.nextObjective = (Round To Integer(Event Player.damageDone / Global.damageNecessaryForNextHero, Down) + 1)
			* Global.damageNecessaryForNextHero;
		Start Forcing Player To Be Hero(Event Player, Global.heroList[Event Player.nextObjective / Global.damageNecessaryForNextHero - 1]);
		Wait(0.250, Ignore Condition);
	}
}

disabled rule("Dummys Summon (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Communicating(Event Player, Hello) == True;
	}

	actions
	{
		Create Dummy Bot(Global.heroList[0], All Teams, -1, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Global.heroList[0], All Teams, -1, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Global.heroList[0], All Teams, -1, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Global.heroList[0], All Teams, -1, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Global.heroList[0], All Teams, -1, Position Of(Event Player), Vector(0, 0, 0));
		disabled Create Dummy Bot(Global.heroList[0], All Teams, -1, Position Of(Event Player), Vector(0, 0, 0));
	}
}

disabled rule("Dummy Aim Bot (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Event Player, Closest Player To(Event Player, Opposite Team Of(Team Of(
			Event Player)))), 10000, To World, Direction and Turn Rate);
		Start Holding Button(Event Player, Button(Primary Fire));
	}
}

disabled rule("Dummy Ult (TEST)")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Ultimate Charge Percent(Event Player) == 100;
	}

	actions
	{
		Press Button(Event Player, Button(Ultimate));
	}
}

rule("Game Mode Description v9.0.0")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(" "), Left, -101, Color(White), Color(White), Color(White),
			Visible To, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("CODE: SSWAT"), Null, Null, Left, -100, Color(White), Color(White), Color(
			White), Visible To, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Damage Gun Game v9.0.0"), Left, -99.500, Color(White), Color(
			White), Color(White), Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("{0} to {1} to swap to the {2}", String("{0} {1} {2}", String(
			"Deal"), Global.damageNecessaryForNextHero * Count Of(Global.heroList), String("Damage")), String("{0} and {1}", String(
			"Invalid string arguments"), Global.damageNecessaryForNextHero), String("Next Hero")), Left, -99, Color(White), Color(White),
			Color(White), Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("(Random) {0}{1}{2}",
			Global.numberOfDpsHeroes > 0 ? Custom String("{0} DPS {1}", Global.numberOfDpsHeroes,
			Global.numberOfTankHeroes > 0 || Global.numberOfSupportHeroes > 0 ? Custom String(" + ") : Custom String("")) : Custom String(
			""), Global.numberOfTankHeroes > 0 ? Custom String("{0} TANKS {1}{2}", Global.numberOfTankHeroes, Custom String("{0}",
			Global.tankHeroesInTheMiddleOfTheList ? Custom String("(mid) ") : Custom String("")),
			Global.numberOfSupportHeroes > 0 ? Custom String(" + ") : Custom String("")) : Custom String(""),
			Global.numberOfSupportHeroes > 0 ? Custom String("{0} SUPPORTS {1}", Global.numberOfSupportHeroes,
			Global.supportHeroesAtTheEndOfTheList ? Custom String("(end)") : Custom String("")) : Custom String("")), Left, -98, Color(
			White), Color(White), Color(White), Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Totally customizable in workshop settings!"), Left, -97.750,
			Color(White), Color(White), Color(White), Visible To and String, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String(" "), Left, -97.500, Color(White), Color(White), Color(White),
			Visible To, Default Visibility);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Created by Jokaes#2263"), Left, -97, Color(White), Color(White),
			Color(White), Visible To, Visible Always);
		Create HUD Text(All Players(All Teams), Null, Null, Custom String("Join my discord.gg/4N4BAE6"), Left, -96, Color(White), Color(
			White), Color(White), Visible To, Default Visibility);
		Small Message(All Players(All Teams), Custom String("Damage Gun Game v9.0.0"));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("{0} to {1} to swap to the {2}", String("{0} {1} {2}", String("Deal"),
			Global.damageNecessaryForNextHero * Count Of(Global.heroList), String("Damage")), String("{0} and {1}", String(
			"Invalid string arguments"), Global.damageNecessaryForNextHero), String("Next Hero")));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("(Random) {0}{1}{2}", Global.numberOfDpsHeroes > 0 ? Custom String(
			"{0} DPS {1}", Global.numberOfDpsHeroes, Global.numberOfTankHeroes > 0 || Global.numberOfSupportHeroes > 0 ? Custom String(
			" + ") : Custom String("")) : Custom String(""), Global.numberOfTankHeroes > 0 ? Custom String("{0} TANKS {1}{2}",
			Global.numberOfTankHeroes, Custom String("{0}", Global.tankHeroesInTheMiddleOfTheList ? Custom String("(mid) ")
			: Custom String("")), Global.numberOfSupportHeroes > 0 ? Custom String(" + ") : Custom String("")) : Custom String(""),
			Global.numberOfSupportHeroes > 0 ? Custom String("{0} SUPPORTS {1}", Global.numberOfSupportHeroes,
			Global.supportHeroesAtTheEndOfTheList ? Custom String("(end)") : Custom String("")) : Custom String("")));
		Wait(3.500, Ignore Condition);
		Small Message(All Players(All Teams), Custom String("Created by Jokaes#2263"));
	}
}

rule("Game Mode Description for players who join")
{
	event
	{
		Player Joined Match;
		All;
		All;
	}

	conditions
	{
		Is Game In Progress == True;
		Global.timeCounter >= 15;
	}

	actions
	{
		Small Message(Event Player, Custom String("Damage Gun Game v9.0.0"));
		Wait(3.500, Ignore Condition);
		Small Message(Event Player, Custom String("{0} to {1} to swap to the {2}", String("{0} {1} {2}", String("Deal"),
			Global.damageNecessaryForNextHero * Count Of(Global.heroList), String("Damage")), String("{0} and {1}", String(
			"Invalid string arguments"), Global.damageNecessaryForNextHero), String("Next Hero")));
		Wait(3.500, Ignore Condition);
		Small Message(Event Player, Custom String("(Random) {0}{1}{2}", Global.numberOfDpsHeroes > 0 ? Custom String("{0} DPS {1}",
			Global.numberOfDpsHeroes, Global.numberOfTankHeroes > 0 || Global.numberOfSupportHeroes > 0 ? Custom String(" + ")
			: Custom String("")) : Custom String(""), Global.numberOfTankHeroes > 0 ? Custom String("{0} TANKS {1}{2}",
			Global.numberOfTankHeroes, Custom String("{0}", Global.tankHeroesInTheMiddleOfTheList ? Custom String("(mid) ")
			: Custom String("")), Global.numberOfSupportHeroes > 0 ? Custom String(" + ") : Custom String("")) : Custom String(""),
			Global.numberOfSupportHeroes > 0 ? Custom String("{0} SUPPORTS {1}", Global.numberOfSupportHeroes,
			Global.supportHeroesAtTheEndOfTheList ? Custom String("(end)") : Custom String("")) : Custom String("")));
		Wait(3.500, Ignore Condition);
		Small Message(Event Player, Custom String("Created by Jokaes#2263"));
	}
}

disabled rule("Damage Gun Game v9.0.0")
{
	event
	{
		Ongoing - Global;
	}
}

disabled rule("Created by Jokaes#2263")
{
	event
	{
		Ongoing - Global;
	}
}